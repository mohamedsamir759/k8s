docker vim docker-compose.yml


version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro   (proc host and mount data in /host/proc:)
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'  (collect data)
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100:9100      (container's port and host's port)
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - monitoring

save and exit.....
docker compose up -d
docker-compose -f prometheus-grafana.yml up 

vim prometheus.yml    (config file of prometheus ..put config file out to be easily assign and make configrations on it instead you make container:prometheus server and enter it and vim /etc/prometheus/prometheus.yml)

global:
  scrape_interval: 1m   (time that is taken by prometheus to collect info from node exporter is every 1m )

scrape_configs:
  - job_name: 'prometheus'             (Default job for monitoring server itself..you have 2 servers that you can collect from them info and deny default or local host)
    scrape_interval: 1m
    static_configs:
      - targets: ['localhost:9090']

  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']

- job_name: 'node1'
    scrape_interval: 5s
    static_configs:
      - targets: ['192.168.2.100:9100']   (my machine's ip from ip a  if config and port of node exporter) 

remote_write:
  - url: '<Your Prometheus remote_write endpoint>'
    basic_auth:
      username: '<Your Grafana Username>'
      password: '<Your Grafana API key>'
